// Mocks generated by Mockito 5.0.16 from annotations
// in my_albums6/test/albums_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_albums6/model/albums.dart' as _i4;
import 'package:my_albums6/model/albums_cache.dart' as _i2;
import 'package:my_albums6/model/albums_service.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AlbumsCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumsCache extends _i1.Mock implements _i2.AlbumsCache {
  MockAlbumsCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Album>> getAlbums() =>
      (super.noSuchMethod(Invocation.method(#getAlbums, []),
              returnValue: Stream<List<_i4.Album>>.empty())
          as _i3.Stream<List<_i4.Album>>);
  @override
  void setAlbums(List<_i4.Album>? albums) =>
      super.noSuchMethod(Invocation.method(#setAlbums, [albums]),
          returnValueForMissingStub: null);
  @override
  void setDate(DateTime? dateTime) =>
      super.noSuchMethod(Invocation.method(#setDate, [dateTime]),
          returnValueForMissingStub: null);
  @override
  _i3.Stream<DateTime?> getLastDate() =>
      (super.noSuchMethod(Invocation.method(#getLastDate, []),
          returnValue: Stream<DateTime?>.empty()) as _i3.Stream<DateTime?>);
  @override
  _i3.Stream<List<int>> getFavorites() =>
      (super.noSuchMethod(Invocation.method(#getFavorites, []),
          returnValue: Stream<List<int>>.empty()) as _i3.Stream<List<int>>);
  @override
  void setFavorites(List<int>? favorites) =>
      super.noSuchMethod(Invocation.method(#setFavorites, [favorites]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [AlbumsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumsService extends _i1.Mock implements _i5.AlbumsService {
  MockAlbumsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Album>> getAlbums() =>
      (super.noSuchMethod(Invocation.method(#getAlbums, []),
              returnValue: Stream<List<_i4.Album>>.empty())
          as _i3.Stream<List<_i4.Album>>);
  @override
  String toString() => super.toString();
}
