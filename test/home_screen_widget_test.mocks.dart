// Mocks generated by Mockito 5.0.16 from annotations
// in my_albums6/test/home_screen_widget_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_albums6/model/albums_repository.dart' as _i2;
import 'package:my_albums6/view_model/albums_view_model.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAlbumsRepository_0 extends _i1.Fake implements _i2.AlbumsRepository {
}

class _FakeInput_1 extends _i1.Fake implements _i3.Input {}

class _FakeOutput_2 extends _i1.Fake implements _i3.Output {}

/// A class which mocks [AlbumsVM].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumsVM extends _i1.Mock implements _i3.AlbumsVM {
  MockAlbumsVM() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlbumsRepository get albumsRepository =>
      (super.noSuchMethod(Invocation.getter(#albumsRepository),
          returnValue: _FakeAlbumsRepository_0()) as _i2.AlbumsRepository);
  @override
  _i3.Input get input => (super.noSuchMethod(Invocation.getter(#input),
      returnValue: _FakeInput_1()) as _i3.Input);
  @override
  _i3.Output get output => (super.noSuchMethod(Invocation.getter(#output),
      returnValue: _FakeOutput_2()) as _i3.Output);
  @override
  set output(_i3.Output? _output) =>
      super.noSuchMethod(Invocation.setter(#output, _output),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
